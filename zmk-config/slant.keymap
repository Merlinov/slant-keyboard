#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define SYM     1
#define NUM     2
#define NAV     3

/ {
    behaviors {
        // must double-tap to clear bluetooth profiles
        btclr: bluetooth_clear {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_CLEAR_DTAP";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&bt BT_CLR>;
        };
        
        // shift-space is underscore
        spcunder: space_underscore {
            compatible = "zmk,behavior-mod-morph";
            label = "SPACE_UNDERSCORE";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&kp UNDER>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
    
    combos {
        compatible = "zmk,combos";
        combo_capsword {
            timeout-ms = <50>;
            key-positions = <20 29>;
            bindings = <&caps_word>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ----------------------------------------------------------------------------------------------------------------------------
// |    Q    |    W    |    E    |    R    |    T    |                      |    Y    |    U    |    I    |    O    |    P    |
// |    A    |    S    |    D    |    F    |    G    |                      |    H    |    J    |    K    |    L    |   ;:    |
// |    Z    |    X    |    C    |    V    |    B    |                      |    N    |    M    |   ,<    |   .>    |   /?    |
//                               |   ESC   |   TAB   |   DEL   |  |  BSPC   |  SPACE_ | RETURN  |
            bindings = <
    &kp Q       &kp W     &kp E     &kp R         &kp T                                       &kp Y       &kp U     &kp I     &kp O     &kp P   
    &kp A       &kp S     &kp D     &kp F         &kp G                                       &kp H       &kp J     &kp K     &kp L     &kp SEMI
    &mt LSHFT Z &kp X     &kp C     &kp V         &mt LALT B                                  &mt RALT N  &kp M     &kp COMMA &kp DOT   &mt RSHFT FSLH
                                    &mt LCTRL ESC &lt SYM TAB   &lt NUM DEL     &lt NAV BSPC  &spcunder   &mt LGUI RET
            >;
        };
        
        symbol_layer {
// ----------------------------------------------------------------------------------------------------------------------------
// |    `    |    ~    |    '    |    "    |         |                      |    _    |    {    |    }    |    [    |    ]    |
// |    !    |    @    |    #    |    $    |    %    |                      |    ^    |    &    |    *    |    (    |    )    |
// |         |         |         |         |         |                      |    -    |    +    |    =    |    |    |    \    |
//                               |         |         |         |  |         |         |         |
            bindings = <
    &kp GRAVE &kp TILDE &kp APOS  &kp DQT  &trans                           &kp UNDER &kp LBRC  &kp RBRC  &kp LBKT  &kp RBKT
    &kp EXCL  &kp AT    &kp POUND &kp DLLR &kp PRCNT                        &kp CARET &kp AMPS  &kp ASTRK &kp LPAR  &kp RPAR
    &trans    &trans    &trans    &trans   &trans                           &kp MINUS &kp PLUS  &kp EQUAL &kp PIPE  &mt RSHFT BSLH
                                  &trans   &trans    &kp DEL      &kp BSPC  &trans    &kp RET
            >;
        };

        number_layer {
// ----------------------------------------------------------------------------------------------------------------------------
// |         |         |         |         |         |                      |         |         |         |         |         |
// |    1    |    2    |    3    |    4    |    5    |                      |    6    |    7    |    8    |    9    |    0    |
// |         |         |         |         |         |                      |         |         |         |         |         |
//                               |         |         |         |  |         |         |         |
            bindings = <
    &trans   &trans    &trans    &trans    &trans                           &trans    &trans    &trans    &trans    &trans
    &kp N1   &kp N2    &kp N3    &kp N4    &kp N5                           &kp N6    &kp N7    &kp N8    &kp N9    &kp N0
    &trans   &trans    &trans    &trans    &trans                           &trans    &trans    &trans    &trans    &trans
                                  &trans   &trans    &kp DEL      &kp BSPC  &trans    &trans
            >;
        };

        navigation_layer {
// ----------------------------------------------------------------------------------------------------------------------------
// |   F1    |   F2    |   F3    |   F4    |   F5    |                      |   F6    |   F7    |   F8    |   F9    |   F10   |
// |   F11   |   F12   |         |         | BT CLR  |                      |         |   <-    |    v    |    ^    |   ->    |
// |   BT0   |   BT1   |   BT2   |   BT3   |   BT4   |                      |         |  Home   | Pg Down |  Pg Up  |   End   |
//                               |         |         |         |  |         |         |         |
            bindings = <
    &kp F1       &kp F2       &kp F3       &kp F4       &kp F5                         &kp F6    &kp F7    &kp F8    &kp F9    &kp F10
    &kp F11      &kp F12      &trans       &trans       &btclr                         &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &trans
    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                   &kp HOME  &kp PG_DN &kp PG_UP &kp END   &trans
                                           &trans       &trans       &trans  &trans    &trans    &trans
            >;
        };
    };
};